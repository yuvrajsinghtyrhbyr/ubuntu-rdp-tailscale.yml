name: Ubuntu RDP/Tailscale

on:
  workflow_dispatch:
    inputs:
      ts_tailnet:
        description: "Tailnet name (xyz@gmail.com)"
        required: true
      ts_api_key:
        description: "Tailscale API Key"
        required: true
      ts_authkey:
        description: "Tailscale Auth Key"
        required: true
      runtime_minutes:
        description: "Runtime (minutes)"
        default: "120"
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360

    steps:
      - name: üü¢ Update & install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg lsb-release jq

      - name: ‚öôÔ∏è Install Tailscale on Ubuntu
        run: |
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/$(lsb_release -cs).noarmor.gpg |
            sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg > /dev/null
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/$(lsb_release -cs).tailscale-keyring.list |
            sudo tee /etc/apt/sources.list.d/tailscale.list
          sudo apt-get update
          sudo apt-get install -y tailscale
          sudo systemctl enable --now tailscaled
          tailscale version

      - name: üîó Connect to Tailscale
        run: |
          sudo tailscale up --authkey "${{ github.event.inputs.ts_authkey }}" --hostname bullet --accept-routes --accept-dns=false
          echo "IPv4 address:"
          sudo tailscale ip -4

      - name: üßπ Purge old Tailscale nodes (optional)
        run: |
          curl -s -H "Authorization: Bearer ${{ github.event.inputs.ts_api_key }}" \
            "https://api.tailscale.com/api/v2/tailnet/${{ github.event.inputs.ts_tailnet }}/devices" | jq '.devices[] | select(.hostname|test("bullet";"i")) | .id' -r |
          while read id; do
            curl -s -X DELETE -H "Authorization: Bearer ${{ github.event.inputs.ts_api_key }}" \
              "https://api.tailscale.com/api/v2/device/$id" || true
          done

      - name: ‚è≥ Keep alive
        run: |
          mins=${{ github.event.inputs.runtime_minutes }}
          end=$(( $(date +%s) + mins*60 ))
          while [ $(date +%s) -lt $end ]; do
            left=$(( (end - $(date +%s))/60 ))
            echo "Ubuntu session alive... ($left min left)"
            sleep 60
          done
